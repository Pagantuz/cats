{"version":3,"file":"static/js/648.09259b82.chunk.js","mappings":"qPAIMA,EAAM,sCACJC,EAAQC,EAAAA,EAAAA,I,iCCIVC,EAAuB,WAC3B,OACEC,EAAAA,EAAAA,KADMC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,iBAAkBC,EAAzC,EAAyCA,UAAWC,EAApD,EAAoDA,OAEpD,EAAgCC,EAAAA,UAAwB,GAAxD,eAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4CF,EAAAA,SAAuB,IAAnE,eAAOG,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACMC,EAAaD,EAAaE,IAAI,QAmCpC,OAjCAV,EAAAA,WAAgB,WDZA,IAACW,ECaVZ,EAAOa,SACVf,GAAiB,IDbdgB,EAAAA,EAAAA,GAAgB,CACrBC,KAAM,MACNvB,IAAAA,EACAE,OAAQ,CAAEsB,QAAS,CAAE,YAAavB,GAAOmB,OAAAA,KCYpCK,MAAK,SAACC,GACLnB,EAAUmB,MAEXC,OAAM,SAACC,GAAO,IAAD,EACZC,EAAAA,EAAAA,MAAmB,CACjBC,QAASF,EAAEE,QACXC,aAAa,UAAAH,EAAEI,gBAAF,eAAYC,KAAKH,UAAW,QAG5CI,SAAQ,WACP5B,GAAiB,SAGtB,IAEHG,EAAAA,WAAgB,WACd,OAAIS,QAAJ,IAAIA,GAAAA,EAAYG,QACdV,GAAY,GACZE,EACEL,EAAO2B,QACL,mBAC2D,IAD3D,EAAGC,KACIC,cAAcC,OAAOpB,EAAWmB,oBAI3C1B,GAAY,KAEb,CAACM,KAGF,iBAAKsB,UAAU,SAAf,WACE,SAAC,IAAD,KACA,UAAC,IAAD,CACEC,OAAO,KACPC,QAASpC,EACTqC,WAAYhC,EAAWE,EAAiBJ,EACxCmC,WAAY,CACVC,kBAAmB,SAACC,GAAD,OACjB,cAAGC,MAAO,CAAEC,OAAQ,GAApB,SAA0BF,EAAOd,gBANvC,WASE,SAAC,WAAD,CAAciB,MAAM,OAAOC,UAAU,QAAW,SAChD,SAAC,WAAD,CAAcD,MAAM,SAASC,UAAU,UAAa,WACpD,SAAC,WAAD,CAAcD,MAAM,YAAYC,UAAU,aAAgB,cAC1D,SAAC,WAAD,CACED,MAAM,UACNC,UAAU,UAEVC,OAAQ,SAACC,EAAQN,GAAT,OACN,SAAC,KAAD,CAAMO,GAAE,kBAAaP,EAAOQ,GAApB,YAA0BR,EAAOT,MAAjC,OAAwCtB,EAASwB,QAAzD,UACE,SAAC,IAAD,CAAQf,KAAK,OAAb,6BAHA,gBAQLf,EAAOa,SAAU,SAAC,KAAD","sources":["api/breeds.ts","pages/Breeds/BreedsPage.tsx"],"sourcesContent":["import { config } from '../config';\r\nimport { Breeds } from '../types';\r\nimport { request } from './request';\r\n\r\nconst url = 'https://api.thecatapi.com/v1/breeds';\r\nconst { key } = config;\r\n\r\nconst getBreeds = (params?: any) => {\r\n  return request<Breeds>({\r\n    type: 'GET',\r\n    url,\r\n    config: { headers: { 'x-api-key': key }, params }\r\n  });\r\n};\r\n\r\nconst searchBreeds = (params?: any) => {\r\n  return request<Breeds>({\r\n    type: 'GET',\r\n    url: `${url}/search`,\r\n    config: { headers: { 'x-api-key': key }, params }\r\n  });\r\n};\r\n\r\nexport { getBreeds, searchBreeds };\r\n","import { Button, notification } from 'antd';\r\nimport Table from 'antd/lib/table';\r\nimport React from 'react';\r\nimport { Link, Outlet, useLocation, useSearchParams } from 'react-router-dom';\r\nimport { getBreeds } from '../../api/breeds';\r\nimport { useStoreContext } from '../../context/Store';\r\nimport { Breed, Breeds } from '../../types';\r\nimport { BreedsFilter } from './components';\r\n\r\nconst BreedsPage: React.FC = () => {\r\n  const { breedsLoading, setBreedsLoading, setBreeds, breeds } =\r\n    useStoreContext();\r\n  const [isSearch, setIsSearch] = React.useState<boolean>(false);\r\n  const [searchedBreeds, setSearchedBreeds] = React.useState<Breeds>([]);\r\n  const location = useLocation();\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const searchName = searchParams.get('name');\r\n\r\n  React.useEffect(() => {\r\n    if (!breeds.length) {\r\n      setBreedsLoading(true);\r\n      getBreeds()\r\n        .then((res) => {\r\n          setBreeds(res);\r\n        })\r\n        .catch((e) => {\r\n          notification.error({\r\n            message: e.message,\r\n            description: e.response?.data.message || ''\r\n          });\r\n        })\r\n        .finally(() => {\r\n          setBreedsLoading(false);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (searchName?.length) {\r\n      setIsSearch(true);\r\n      setSearchedBreeds(\r\n        breeds.filter(\r\n          ({ name }) =>\r\n            name.toLowerCase().search(searchName.toLowerCase()) !== -1\r\n        )\r\n      );\r\n    } else {\r\n      setIsSearch(false);\r\n    }\r\n  }, [searchParams]);\r\n\r\n  return (\r\n    <div className='breeds'>\r\n      <BreedsFilter />\r\n      <Table\r\n        rowKey='id'\r\n        loading={breedsLoading}\r\n        dataSource={isSearch ? searchedBreeds : breeds}\r\n        expandable={{\r\n          expandedRowRender: (record) => (\r\n            <p style={{ margin: 0 }}>{record.description}</p>\r\n          )\r\n        }}>\r\n        <Table.Column title='Name' dataIndex='name' key='name' />\r\n        <Table.Column title='Origin' dataIndex='origin' key='origin' />\r\n        <Table.Column title='Life Span' dataIndex='life_span' key='life_span' />\r\n        <Table.Column\r\n          title='Actions'\r\n          dataIndex='actions'\r\n          key='actions'\r\n          render={(_: any, record: Breed) => (\r\n            <Link to={`/breeds/${record.id}-${record.name}${location.search}`}>\r\n              <Button type='link'>Show images</Button>\r\n            </Link>\r\n          )}\r\n        />\r\n      </Table>\r\n      {!!breeds.length && <Outlet />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { BreedsPage };\r\n"],"names":["url","key","config","BreedsPage","useStoreContext","breedsLoading","setBreedsLoading","setBreeds","breeds","React","isSearch","setIsSearch","searchedBreeds","setSearchedBreeds","location","useLocation","useSearchParams","searchParams","searchName","get","params","length","request","type","headers","then","res","catch","e","notification","message","description","response","data","finally","filter","name","toLowerCase","search","className","rowKey","loading","dataSource","expandable","expandedRowRender","record","style","margin","title","dataIndex","render","_","to","id"],"sourceRoot":""}